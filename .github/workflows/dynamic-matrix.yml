name: Dynamic Matrix
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  generate_matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate_matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4
      - name: Generate Matrix
        id: generate_matrix
        run: |
          echo -e "\n\n STARTING GENERATE MATRIX \n\n"
          echo 'PWD'
          pwd
          echo 'LS'
          ls
          ./generate-matrix.py

  terraform_dev:
    name: ${{ matrix.env }} (${{ matrix.deployment }})
    runs-on: ubuntu-latest
    needs: generate_matrix
    strategy:
      fail-fast: true
      matrix:  ${{ fromJson(needs.generate_matrix.outputs.matrix.dev) }}
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.deployment }}-${{ matrix.env }}-${{ matrix.region }}
      cancel-in-progress: false
    steps:
    - run: echo "Running for env=${{ matrix.env }} in region=${{ matrix.region }} deployment=${{ matrix.deployment }}"

  terraform_stg:
    name: ${{ matrix.env }} (${{ matrix.deployment }})
    runs-on: ubuntu-latest
    needs: generate_matrix
    strategy:
      fail-fast: true
      matrix:  ${{ fromJson(needs.generate_matrix.outputs.matrix.stg) }}
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.deployment }}-${{ matrix.env }}-${{ matrix.region }}
      cancel-in-progress: false
    steps:
    - run: echo "Running for env=${{ matrix.env }} in region=${{ matrix.region }} deployment=${{ matrix.deployment }}"

  terraform_uat:
    name: ${{ matrix.env }} (${{ matrix.deployment }})
    runs-on: ubuntu-latest
    needs: generate_matrix
    strategy:
      fail-fast: true
      matrix:  ${{ fromJson(needs.generate_matrix.outputs.matrix.uat) }}
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.deployment }}-${{ matrix.env }}-${{ matrix.region }}
      cancel-in-progress: false
    steps:
    - run: echo "Running for env=${{ matrix.env }} in region=${{ matrix.region }} deployment=${{ matrix.deployment }}"

  terraform_prd:
    name: ${{ matrix.env }} (${{ matrix.deployment }})
    runs-on: ubuntu-latest
    needs: generate_matrix
    strategy:
      fail-fast: true
      matrix:  ${{ fromJson(needs.generate_matrix.outputs.matrix.prd) }}
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.deployment }}-${{ matrix.env }}-${{ matrix.region }}
      cancel-in-progress: false
    steps:
    - run: echo "Running for env=${{ matrix.env }} in region=${{ matrix.region }} deployment=${{ matrix.deployment }}"